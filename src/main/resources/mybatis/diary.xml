<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.diary.DiaryDAOInter">

  <!-- 등록한 레코드 갯수 1 리턴, #{memberno}: public int getAdminno() 호출됨 -->
  <insert id="create" parameterType="dev.mvc.diary.DiaryVO">
    INSERT INTO diary(diaryno, title, ddate, summary, weather_code, emno, memberno, illustno)
    VALUES(diary_seq.nextval, #{title}, sysdate, #{summary}, #{weather_code}, #{emno}, #{memberno}, #{illustno})
  </insert>

  <!-- 모든 카테고리의 등록된 글목록 -->
  <select id="list_all" resultType="dev.mvc.diary.DiaryVO">
    SELECT diaryno, title, ddate, summary, weather_code, emno, illustno
    FROM diary
    ORDER BY diaryno DESC
  </select>
  
  <select id="cntcount" parameterType="int" resultType="int">
    SELECT COUNT(*) FROM diary WHERE diaryno = #{diaryno}
</select>

  
  <!-- 특정 카테고리의 등록된 글목록 
  <select id="list_by_cateno" resultType="dev.mvc.diary.DiaryVO" parameterType="int">
    SELECT diaryno, memberno, cateno, title, content, recom, cnt, replycnt, rdate,
              LOWER(file1) as file1, file1saved, thumb1, size1, mp4
    FROM contents 
    WHERE cateno = #{cateno}
    ORDER BY diaryno DESC
  </select> -->
  
  <!-- 일반적인 조회 -->
  <select id="read" resultType="dev.mvc.diary.DiaryVO" parameterType="int">
    SELECT diaryno, title, ddate, weather_code, illustno, emno
    FROM diary
    WHERE diaryno = #{diaryno}
  </select>
  
  <!-- map 등록, 수정, 삭제, 
         HashMap: VO 클래스는 변수가 너무 많아서 메모리 낭비가 발생함으로,
                       보통 3개 이하의 적은 변수만 전달하는 경우 HashMap 사용 권장 
  <update id="map" parameterType="HashMap">
    UPDATE contents SET map=#{map} WHERE diaryno=#{diaryno}
  </update> -->

  <!-- Youtube 등록, 수정, 삭제, 
         HashMap: VO 클래스는 변수가 너무 많아서 메모리 낭비가 발생함으로,
                       보통 3개 이하의 적은 변수만 전달하는 경우 HashMap 사용 권장
  <update id="youtube" parameterType="HashMap">
    UPDATE contents SET youtube=#{youtube} WHERE diaryno=#{diaryno}
  </update> -->

  <!-- 카테고리별 검색 목록 
  <select id="list_by_cateno_search" resultType="dev.mvc.diary.DiaryVO" parameterType="HashMap">
    SELECT diaryno, memberno, cateno, title, content, recom, cnt, replycnt, word, rdate,
            file1, file1saved, thumb1, size1, map, youtube
    FROM contents
    <choose>
      <when test="word == null or word == ''"> 
        WHERE cateno=#{cateno}
      </when>
      <otherwise> 
        WHERE cateno=#{cateno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
    ORDER BY diaryno DESC   
  </select>-->
   
  <!-- 카테고리별 검색 레코드 갯수 
  <select id="list_by_cateno_search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM contents
    <choose>
      <when test="word == null or word == ''"> 
        WHERE cateno=#{cateno}
      </when>
      <otherwise> 
        WHERE cateno=#{cateno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
  </select>   -->

  <!-- 카테고리별 검색 + 페이징 목록 -->
  <select id="list_by_diaryno_search_paging" resultType="dev.mvc.diary.DiaryVO" parameterType="HashMap">
     SELECT *
     FROM (
         SELECT ROWNUM rnum, diaryno, title, ddate, emno, illustno, summary, weather_code
         FROM (
             SELECT diaryno, title, ddate, emno, illustno, summary, weather_code
             FROM diary
             <choose>
                 <when test="title == null or title == ''">
                     WHERE 1 = 1
                 </when>
                 <otherwise>
                     WHERE UPPER(title) LIKE '%' || UPPER(#{title}) || '%'
                 </otherwise>
             </choose>
             ORDER BY diaryno DESC
         )
         WHERE ROWNUM <![CDATA[<=]]> #{end_num}
     )
     WHERE rnum <![CDATA[>=]]> #{start_num}
  </select>

  
  <!-- 패스워드 검사
  <select id="password_check" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt 
    FROM contents
    WHERE diaryno = #{diaryno} AND passwd=#{passwd}
  </select> -->
  
  <!-- 글 수정
  <update id="update_text" parameterType="dev.mvc.diary.DiaryVO">
    UPDATE contents
    SET title=#{title}, content=#{content},  word=#{word}
    WHERE diaryno = #{diaryno}
  </update> -->


  <!-- 파일 수정
  <update id="update_file" parameterType="dev.mvc.diary.DiaryVO">
    UPDATE contents
    SET file1=#{file1}, file1saved=#{file1saved}, thumb1=#{thumb1}, size1=#{size1}
    WHERE diaryno = #{diaryno}
  </update>   -->

  <!-- 글 삭제 -->
  <delete id="delete" parameterType="int">
    DELETE FROM diary
    WHERE diaryno=#{diaryno}
  </delete>
  
  <!-- FK cateno 컬럼에 대응하는 필수 SQL -->
  <!-- 특정 카테고리에 속한 레코드 갯수를 리턴 
  <select id="count_by_cateno" resultType="int" parameterType="int">
    SELECT COUNT(*) as cnt 
    FROM contents 
    WHERE cateno=#{cateno}
  </select>-->
  
  <!-- 특정 카테고리에 속한 모든 레코드 삭제
  <delete id="delete_by_cateno" parameterType="int">
    DELETE FROM contents
    WHERE cateno=#{cateno}
  </delete> -->

  <!-- FK memberno 컬럼에 대응하는 필수 SQL -->
  <!-- 특정 카테고리에 속한 레코드 갯수를 리턴
  <select id="count_by_memberno" resultType="int" parameterType="int">
    SELECT COUNT(*) as cnt 
    FROM contents 
    WHERE memberno=#{memberno}
  </select> -->
  
  <!-- 특정 카테고리에 속한 모든 레코드 삭제
  <delete id="delete_by_memberno" parameterType="int">
    DELETE FROM contents
    WHERE memberno=#{memberno}
  </delete> -->
  


    
</mapper> 

